rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null && ('role' in userDoc) && (userDoc.role == 'admin' || userDoc.role == 'superAdmin');
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin');
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if (isSignedIn() && request.auth.uid == userId && request.resource.data.role == resource.data.role && request.resource.data.status == resource.data.status)
                    || (isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin');
      allow delete: if false;
    }

    match /reports/{reportId} {
      allow read: if isSignedIn() &&
                   (request.auth.uid == resource.data.submittedById ||
                    (isAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.school == resource.data.school));
      allow create: if isSignedIn();
      allow update: if (isAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.school == resource.data.school)
                    || (isSignedIn() && request.auth.uid == resource.data.submittedById && request.resource.data.keys().hasOnly(['communicationLog']));
      allow delete: if false;
    }

    match /schools/{schoolId} {
      allow read: if isSignedIn();
      allow write: if false;
    }
    match /categories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if false;
    }
  }
}