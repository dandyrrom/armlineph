rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdminOrSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin');
    }

    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdminOrSuperAdmin());
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if (isSignedIn() && request.auth.uid == userId && request.resource.data.role == resource.data.role && request.resource.data.status == resource.data.status)
                    || isSuperAdmin();
      allow delete: if false;
    }

    match /reports/{reportId} {
      allow read: if isSignedIn() &&
                   (request.auth.uid == resource.data.submittedById ||
                    (isAdminOrSuperAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.school == resource.data.school));
      
      allow create: if isSignedIn() || request.resource.data.isAnonymous == true;
      
      // --- UPDATED RULE ---
      // We are changing the user's permission to be more explicit.
      // It now checks that the ONLY field being written to is 'communicationLog'.
      allow update: if (isAdminOrSuperAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.school == resource.data.school)
                    || (isSignedIn() && request.auth.uid == resource.data.submittedById && request.writeFields.hasOnly(['communicationLog']));

      allow delete: if false;
    }

    match /schools/{schoolId} {
      allow read: if true;
      allow write: if false;
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if false;
    }
  }
}